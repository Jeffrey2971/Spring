<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--配置Spring的IOC，把Service对象配置进来-->
    <bean id="accountService" class="jeffrey.service.impl.AccountServiceImpl"></bean> <!--这个类需要增强-->

    <!--配置Logger类-->
    <bean id="logger" class="jeffrey.utils.Logger"></bean> <!--日志增强-->

    <!--配置AOP-->
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* jeffrey.service.impl.*.*(..))"/>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
<!--            &lt;!&ndash;配置前置通知：在切入点方法执行之前执行&ndash;&gt;-->
<!--            <aop:before method="beforePrintLog" pointcut-ref="pt1"></aop:before>-->

<!--            &lt;!&ndash;配置后置通知：在切入点方法正常执行之后执行，它和异常通知永远只能执行其中一个&ndash;&gt;-->
<!--            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"></aop:after-returning>-->

<!--            &lt;!&ndash;配置异类通知：在切入点方法执行产生异常之后执行，它和后置通知永远只能执行其中一个&ndash;&gt;-->
<!--            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>-->

<!--            &lt;!&ndash;配置最终通知：不论切入点方法是否正常执行它都会在最后执行&ndash;&gt;-->
<!--            <aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>-->

<!--            &lt;!&ndash;-->
<!--            配置切入点表达式-->
<!--            属性-->
<!--                id属性：用于指定表达式的唯一标志-->
<!--                expression属性：用于指定表达式内容-->
<!--            &ndash;&gt;-->
            <!--配置环绕通知 详细注释请看Logger类-->
            <aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>
    </aop:config>


</beans>